library(tidyverse)
setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur")

a1 <- read.table("A1_final_data.txt", header=TRUE, na.string="NA")
a2 <- read.table("A2_final_data.txt", header=TRUE, na.string="NA")
c1 <- read.table("C1_final_data.txt", header=TRUE, na.string="NA")
c2 <- read.table("C2_final_data.txt", header=TRUE, na.string="NA")

## scale data so it is mean = 0, stdev = 1
numeric_cols <- c('days_to_germinate', 'growth_rate_day', 'drought_b', 'survival_time', 'biomass')
a1_scaled <- a1 %>%
  mutate(across(all_of(numeric_cols), scale))

a2_scaled <- a2 %>%
  mutate(across(all_of(numeric_cols), scale))

c1_scaled <- c1 %>%
  mutate(across(all_of(numeric_cols), scale))
  
c2_scaled <- c2 %>%
  mutate(across(all_of(numeric_cols), scale))


# Define the order of variables
variable_order <- c("days_to_germinate", "growth_rate_day", "drought_b", "survival_time", "biomass")

# Reshape data into long format and scale between 0 and 1, ignoring missing points
long_data_a1 <- a1_scaled %>%
  pivot_longer(cols = variable_order,
               names_to = "Variable",
               values_to = "Value") %>%
  group_by(Variable)

# Create a boxplot using ggplot2 with facets for each variable and standardized y-axis
p1 <- ggplot(long_data_a1, aes(x = as.factor(cross), y = Value, fill = as.factor(cross))) +
  geom_boxplot() +
  facet_wrap(~ factor(Variable, levels = variable_order), scales = "fixed", ncol = 5) +
  coord_cartesian(ylim = c(-2, 4)) +  
  theme_classic()
 

############

# Reshape data into long format and scale between 0 and 1, ignoring missing points
long_data_a2 <- a2_scaled %>%
  pivot_longer(cols = variable_order,
               names_to = "Variable",
               values_to = "Value") %>%
  group_by(Variable)

# Create a boxplot using ggplot2 with facets for each variable and standardized y-axis
p2 <- ggplot(long_data_a2, aes(x = as.factor(cross), y = Value, fill = as.factor(cross))) +
  geom_boxplot() +
  facet_wrap(~ factor(Variable, levels = variable_order), scales = "fixed", ncol = 5) +
  coord_cartesian(ylim = c(-2, 4)) +
  theme_classic()
  
  ##############
    
  # Reshape data into long format and scale between 0 and 1, ignoring missing points
  long_data_c1 <- c1_scaled %>%
    pivot_longer(cols = variable_order,
                 names_to = "Variable",
                 values_to = "Value") %>%
    group_by(Variable)
  
  # Create a boxplot using ggplot2 with facets for each variable and standardized y-axis
  p3 <- ggplot(long_data_c1, aes(x = as.factor(cross), y = Value, fill = as.factor(cross))) +
    geom_boxplot() +
    facet_wrap(~ factor(Variable, levels = variable_order), scales = "fixed", ncol = 5) +
        coord_cartesian(ylim = c(-2, 4)) +
        theme_classic()  
  
  ###############
   
  # Reshape data into long format and scale between 0 and 1, ignoring missing points
  long_data_c2 <- c2_scaled %>%
    pivot_longer(cols = variable_order,
                 names_to = "Variable",
                 values_to = "Value") %>%
    group_by(Variable)
  
  # Create a boxplot using ggplot2 with facets for each variable and standardized y-axis
  p4 <- ggplot(long_data_c2, aes(x = as.factor(cross), y = Value, fill = as.factor(cross))) +
    geom_boxplot() +
    facet_wrap(~ factor(Variable, levels = variable_order), scales = "fixed", ncol = 5) +
    coord_cartesian(ylim = c(-2, 4)) +
    theme_classic() 

library(gridExtra)
grid.arrange(p1,p2,p3,p4, nrow=4)
