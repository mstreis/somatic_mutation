### For pollen donor A1, including linear model fits and t-tests:

library(dplyr)
library(tidyr)

setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur/")
drought_a1 <- read.table("A1_drought_remove_22_43.txt", header=TRUE)

# removed plants 22 and 43 because they died very early in expt, so couldn't fit logistic curve

#convert wide format to long format
df <- drought_a1 %>% gather(key="day", value="drought_score", X0,X2,X5,X7,X9,X12,X14,X15,X16,X18,X19,X20,X21,X22,X26,X27,X28,X29,X30,X34,X35)
df$day <- as.numeric(gsub("X", "", df$day))  ## to remove the "X" in front of day and convert the values into numeric values


# created vector with 5 characters
columns= c("cone","cross","a","b","c")
# pass this vector length to ncol parameter
# and nrow with 0
params = data.frame(matrix(nrow = 0, ncol = length(columns)))
# assign column names
colnames(params) = columns
columns2= c("cone","cross","day","estimate")
# pass this vector length to ncol parameter
# and nrow with 0
predicted_fits = data.frame(matrix(nrow = 0, ncol = length(columns2)))
# assign column names
colnames(predicted_fits) = columns2
control1 <- stats::nls.control(maxiter = 500)
for (i in unique(df$cone)) {
  df1 <- subset(df, cone == i)
  j <- unique(df1$cross)
  m1 <- stats::nls(drought_score ~ SSlogis(day, a, b, c), data = df1, control = control1)
  sm1 <- summary(m1)
  c1 <- as.data.frame(sm1$coefficients)
  v1 <- c(i,j,c1$Estimate)
  params[nrow(params) + 1,1:5] <- v1                 # Append new row
  v2 <- c(df1$cone,df1$cross,df1$day,predict(m1))
  predicted_fits[nrow(predicted_fits) + 1:21,1:4] <- v2
}

write.table(params, "A1_parameter_estimates.txt")
write.table(predicted_fits, "A1_predicted_fits.txt")

#load the parameter estimates as dataframe
a1_params <- read.table("A1_parameter_estimates.txt", header=TRUE)

# make quick boxplot to look at differences between A and G
boxplot(b ~ cross, data=params)

#t-test
t.test(b ~ cross, data=a1_params)

##############

 Welch Two Sample t-test

data:  b by cross
t = 2.2105, df = 85.222, p-value = 0.02975
alternative hypothesis: true difference in means between group A and group G is not equal to 0
95 percent confidence interval:
 0.1998628 3.7747399
sample estimates:
mean in group A mean in group G 
       17.34792        15.36062 

###############

lm <- lm(b ~ cross, data=a1_params)
summary(lm)

################
Call:
lm(formula = b ~ cross, data = a1_params)

Residuals:
    Min      1Q  Median      3Q     Max 
-6.9105 -3.2000 -0.8638  2.0875 15.8949 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  17.3479     0.6391  27.143   <2e-16 ***
crossG       -1.9873     0.8944  -2.222   0.0287 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 4.335 on 92 degrees of freedom
Multiple R-squared:  0.05093,   Adjusted R-squared:  0.04061 
F-statistic: 4.937 on 1 and 92 DF,  p-value: 0.02874

#####################
#####################
#####################

### For pollen donor A2, including linear model fits and t-tests:

library(dplyr)
library(tidyr)

setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur/")
drought_a2 <- read.table("A2_drought_remove_91_53_1_45_44.txt", header=TRUE)
##removed #91 and 53 because died very early
# remvoed #1, 45, 44 because they were very healthy and didn't get passed 2 at the end of expt, so couldn't fit logistic curve
#convert wide format to long format
df <- drought_a2 %>% gather(key="day", value="drought_score", X0,X2,X5,X7,X9,X12,X14,X15,X16,X18,X19,X20,X21,X22,X26,X27,X28,X29,X30,X34,X35)
df$day <- as.numeric(gsub("X", "", df$day))  ## to remove the "X" in front of day and convert the values into numeric values


# created vector with 5 characters
columns= c("cone","cross","a","b","c")
# pass this vector length to ncol parameter
# and nrow with 0
params = data.frame(matrix(nrow = 0, ncol = length(columns)))
# assign column names
colnames(params) = columns
columns2= c("cone","cross","day","estimate")
# pass this vector length to ncol parameter
# and nrow with 0
predicted_fits = data.frame(matrix(nrow = 0, ncol = length(columns2)))
# assign column names
colnames(predicted_fits) = columns2
control1 <- stats::nls.control(maxiter = 500)
for (i in unique(df$cone)) {
  df1 <- subset(df, cone == i)
  j <- unique(df1$cross)
  m1 <- stats::nls(drought_score ~ SSlogis(day, a, b, c), data = df1, control = control1)
  sm1 <- summary(m1)
  c1 <- as.data.frame(sm1$coefficients)
  v1 <- c(i,j,c1$Estimate)
  params[nrow(params) + 1,1:5] <- v1                 # Append new row
  v2 <- c(df1$cone,df1$cross,df1$day,predict(m1))
  predicted_fits[nrow(predicted_fits) + 1:21,1:4] <- v2
}

write.table(params, "A2_parameter_estimates.txt")
write.table(predicted_fits, "A2_predicted_fits.txt")

#load the parameter estimates as dataframe
a2_params <- read.table("A2_parameter_estimates.txt", header=TRUE)

# make quick boxplot to look at differences between A and G
boxplot(b ~ cross, data=a2_params)

#t-test
t.test(b ~ cross, data=a2_params)

##############


        Welch Two Sample t-test

data:  b by cross
t = 0.50153, df = 88.922, p-value = 0.6172
alternative hypothesis: true difference in means between group A and group G is not equal to 0
95 percent confidence interval:
 -1.209551  2.026306
sample estimates:
mean in group A mean in group G 
       18.14523        17.73685 

###############

lm <- lm(b ~ cross, data=a2_params)
summary(lm)

#############

Call:
lm(formula = b ~ cross, data = a2_params)

Residuals:
    Min      1Q  Median      3Q     Max 
-7.2940 -2.4909  0.3161  2.0638 13.2233 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  18.1452     0.5793  31.325   <2e-16 ***
crossG       -0.4084     0.8147  -0.501    0.617    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 3.886 on 89 degrees of freedom
Multiple R-squared:  0.002815,  Adjusted R-squared:  -0.008389 
F-statistic: 0.2512 on 1 and 89 DF,  p-value: 0.6174

######################
########################
###########################

## Pollen donor C1

library(dplyr)
library(tidyr)

setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur/")
drought_c1 <- read.table("C1_drought_remove_69_78_95.txt", header=TRUE)
##removed #69 because died very early
# remvoed #78, 95 because they were very healthy and didn't get passed 2 at the end of expt, so couldn't fit logistic curve
#convert wide format to long format
df <- drought_c1 %>% gather(key="day", value="drought_score", X0,X2,X5,X7,X9,X12,X14,X15,X16,X18,X19,X20,X21,X22,X26,X27,X28,X29,X30,X34,X35)
df$day <- as.numeric(gsub("X", "", df$day))  ## to remove the "X" in front of day and convert the values into numeric values


# created vector with 5 characters
columns= c("cone","cross","a","b","c")
# pass this vector length to ncol parameter
# and nrow with 0
params = data.frame(matrix(nrow = 0, ncol = length(columns)))
# assign column names
colnames(params) = columns
columns2= c("cone","cross","day","estimate")
# pass this vector length to ncol parameter
# and nrow with 0
predicted_fits = data.frame(matrix(nrow = 0, ncol = length(columns2)))
# assign column names
colnames(predicted_fits) = columns2
control1 <- stats::nls.control(maxiter = 500)
for (i in unique(df$cone)) {
  df1 <- subset(df, cone == i)
  j <- unique(df1$cross)
  m1 <- stats::nls(drought_score ~ SSlogis(day, a, b, c), data = df1, control = control1)
  sm1 <- summary(m1)
  c1 <- as.data.frame(sm1$coefficients)
  v1 <- c(i,j,c1$Estimate)
  params[nrow(params) + 1,1:5] <- v1                 # Append new row
  v2 <- c(df1$cone,df1$cross,df1$day,predict(m1))
  predicted_fits[nrow(predicted_fits) + 1:21,1:4] <- v2
}

write.table(params, "C1_parameter_estimates.txt")
write.table(predicted_fits, "C1_predicted_fits.txt")

#load the parameter estimates as dataframe
c1_params <- read.table("C1_parameter_estimates.txt", header=TRUE)

# make quick boxplot to look at differences between A and G
boxplot(b ~ cross, data=c1_params)

#t-test
t.test(b ~ cross, data=c1_params)

###############
   Welch Two Sample t-test

data:  b by cross
t = 2.5664, df = 86.598, p-value = 0.01199
alternative hypothesis: true difference in means between group A and group G is not equal to 0
95 percent confidence interval:
 0.3596862 2.8307771
sample estimates:
mean in group A mean in group G 
       18.91523        17.32000 
       
###################

lm <- lm(b ~ cross, data=c1_params)
summary(c1)

###################
Call:
lm(formula = b ~ cross, data = c1_params)

Residuals:
    Min      1Q  Median      3Q     Max 
-6.9603 -1.7206 -0.5651  1.4879  8.8464 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  18.9152     0.4365  43.338   <2e-16 ***
crossG       -1.5952     0.6275  -2.542   0.0127 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 3.024 on 91 degrees of freedom
Multiple R-squared:  0.06632,   Adjusted R-squared:  0.05606 
F-statistic: 6.464 on 1 and 91 DF,  p-value: 0.0127
#######################
#####################
######################
#######################


## Pollen donor C2


library(dplyr)
library(tidyr)

setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur/")
drought_c2 <- read.table("C2_drought_remove_8.txt", header=TRUE)
##removed #8 because died very early
#convert wide format to long format
df <- drought_c2 %>% gather(key="day", value="drought_score", X0,X2,X5,X7,X9,X12,X14,X15,X16,X18,X19,X20,X21,X22,X26,X27,X28,X29,X30,X34,X35)
df$day <- as.numeric(gsub("X", "", df$day))  ## to remove the "X" in front of day and convert the values into numeric values


# created vector with 5 characters
columns= c("cone","cross","a","b","c")
# pass this vector length to ncol parameter
# and nrow with 0
params = data.frame(matrix(nrow = 0, ncol = length(columns)))
# assign column names
colnames(params) = columns
columns2= c("cone","cross","day","estimate")
# pass this vector length to ncol parameter
# and nrow with 0
predicted_fits = data.frame(matrix(nrow = 0, ncol = length(columns2)))
# assign column names
colnames(predicted_fits) = columns2
control1 <- stats::nls.control(maxiter = 500)
for (i in unique(df$cone)) {
  df1 <- subset(df, cone == i)
  j <- unique(df1$cross)
  m1 <- stats::nls(drought_score ~ SSlogis(day, a, b, c), data = df1, control = control1)
  sm1 <- summary(m1)
  c1 <- as.data.frame(sm1$coefficients)
  v1 <- c(i,j,c1$Estimate)
  params[nrow(params) + 1,1:5] <- v1                 # Append new row
  v2 <- c(df1$cone,df1$cross,df1$day,predict(m1))
  predicted_fits[nrow(predicted_fits) + 1:21,1:4] <- v2
}

write.table(params, "C2_parameter_estimates.txt")
write.table(predicted_fits, "C2_predicted_fits.txt")

#load the parameter estimates as dataframe
c2_params <- read.table("C2_parameter_estimates.txt", header=TRUE)

# make quick boxplot to look at differences between A and G
boxplot(b ~ cross, data=c2_params)

#t-test
t.test(b ~ cross, data=c2_params)

#####################
     Welch Two Sample t-test

data:  b by cross
t = 1.6368, df = 92.061, p-value = 0.1051
alternative hypothesis: true difference in means between group A and group G is not equal to 0
95 percent confidence interval:
 -0.2512082  2.6060420
sample estimates:
mean in group A mean in group G 
       18.68209        17.50467 
#########################

lm <- lm(b ~ cross, data = c2_params)
summary(lm)

##################


Call:
lm(formula = b ~ cross, data = c2_params)

Residuals:
    Min      1Q  Median      3Q     Max 
-6.4568 -2.5047 -0.7633  2.4010  9.3856 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  18.6821     0.5109  36.569   <2e-16 ***
crossG       -1.1774     0.7187  -1.638    0.105    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 3.502 on 93 degrees of freedom
Multiple R-squared:  0.02805,   Adjusted R-squared:  0.0176 
F-statistic: 2.684 on 1 and 93 DF,  p-value: 0.1048