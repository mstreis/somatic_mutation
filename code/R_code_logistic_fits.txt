library(dplyr)
library(tidyr)

setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur/")
drought_a1 <- read.table("A1_drought_remove_22_43.txt", header=TRUE)

#convert wide format to long format
df <- drought_a1 %>% gather(key="day", value="drought_score", X0,X2,X5,X7,X9,X12,X14,X15,X16,X18,X19,X20,X21,X22,X26,X27,X28,X29,X30,X34,X35)
df$day <- as.numeric(gsub("X", "", df$day))  ## to remove the "X" in front of day and convert the values into numeric values


# created vector with 5 characters
columns= c("cone","cross","a","b","c")
# pass this vector length to ncol parameter
# and nrow with 0
params = data.frame(matrix(nrow = 0, ncol = length(columns)))
# assign column names
colnames(params) = columns
columns2= c("cone","cross","day","estimate")
# pass this vector length to ncol parameter
# and nrow with 0
predicted_fits = data.frame(matrix(nrow = 0, ncol = length(columns2)))
# assign column names
colnames(predicted_fits) = columns2
control1 <- stats::nls.control(maxiter = 500)
for (i in unique(df$cone)) {
  df1 <- subset(df, cone == i)
  j <- unique(df1$cross)
  m1 <- stats::nls(drought_score ~ SSlogis(day, a, b, c), data = df1, control = control1)
  sm1 <- summary(m1)
  c1 <- as.data.frame(sm1$coefficients)
  v1 <- c(i,j,c1$Estimate)
  params[nrow(params) + 1,1:5] <- v1                 # Append new row
  v2 <- c(df1$cone,df1$cross,df1$day,predict(m1))    # this is not necessary if you only want the parameter estimates
  predicted_fits[nrow(predicted_fits) + 1:21,1:4] <- v2  # this is not necessary if you only want the parameter estimates
}

write.table(params, "A1_parameter_estimates.txt")
write.table(predicted_fits, "A1_predicted_fits.txt") # this is not necessary if you only want the parameter estimates

