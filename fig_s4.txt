
library(tidyverse)
setwd("C:/Users/mstreis/Desktop/somatic_mutation_mim_aur")
a1 <- read.table("A1_final_data.txt", header=TRUE, na.string="NA")
a2 <- read.table("A2_final_data.txt", header=TRUE, na.string="NA")
c1 <- read.table("C1_final_data.txt", header=TRUE, na.string="NA")
c2 <- read.table("C2_final_data.txt", header=TRUE, na.string="NA")


## scale data so it is mean = 0, stdev = 1
numeric_cols <- c('days_to_germinate', 'growth_rate_day', 'drought_b', 'survival_time', 'biomass')
a1_scaled <- a1 %>%
  mutate(across(all_of(numeric_cols), scale))

a2_scaled <- a2 %>%
  mutate(across(all_of(numeric_cols), scale))

c1_scaled <- c1 %>%
  mutate(across(all_of(numeric_cols), scale))
  
c2_scaled <- c2 %>%
  mutate(across(all_of(numeric_cols), scale))


## take inverse of growth rate and biomass  
a1_scaled$growth_inverse <- -1*(a1_scaled$growth_rate_day)
a1_scaled$biomass_inverse <- -1*(a1_scaled$biomass)

a2_scaled$growth_inverse <- -1*(a2_scaled$growth_rate_day)
a2_scaled$biomass_inverse <- -1*(a2_scaled$biomass)

c1_scaled$growth_inverse <- -1*(c1_scaled$growth_rate_day)
c1_scaled$biomass_inverse <- -1*(c1_scaled$biomass)

c2_scaled$growth_inverse <- -1*(c2_scaled$growth_rate_day)
c2_scaled$biomass_inverse <- -1*(c2_scaled$biomass)

# Define the order of variables
variable_order <- c("days_to_germinate", "growth_inverse", "drought_b", "survival_time", "biomass_inverse")

# Create a line plot connecting points for each row
matplot(t(as.matrix(a1_scaled[variable_order])),
        type = "b", pch=19, col = ifelse(a1$cross == "A", "red", ifelse(a1$cross == "G", "blue", "black")),
        lwd = ifelse(a1$cross %in% c("A", "G"), 1.5, 1),
        xlab = "Variable", ylab = "Z-score", ylim=c(-3,4))

# Set x-axis tick labels
axis(1, at = seq_along(variable_order), labels = variable_order)

# Create a line plot connecting points for each row
matplot(t(as.matrix(a2_scaled[variable_order])),
        type = "b", pch=19, col = ifelse(a1$cross == "A", "red", ifelse(a1$cross == "G", "blue", "black")),
        lwd = ifelse(a1$cross %in% c("A", "G"), 1.5, 1),
        xlab = "Variable", ylab = "Z-score", ylim=c(-3,4))

# Set x-axis tick labels
axis(1, at = seq_along(variable_order), labels = variable_order)

# Create a line plot connecting points for each row
matplot(t(as.matrix(c1_scaled[variable_order])),
        type = "b", pch=19, col = ifelse(a1$cross == "A", "red", ifelse(a1$cross == "G", "blue", "black")),
        lwd = ifelse(a1$cross %in% c("A", "G"), 1.5, 1),
        xlab = "Variable", ylab = "Z-score", ylim=c(-3,4))

# Set x-axis tick labels
axis(1, at = seq_along(variable_order), labels = variable_order)

# Create a line plot connecting points for each row
matplot(t(as.matrix(c2_scaled[variable_order])),
        type = "b", pch=19, col = ifelse(a1$cross == "A", "red", ifelse(a1$cross == "G", "blue", "black")),
        lwd = ifelse(a1$cross %in% c("A", "G"), 1.5, 1),
        xlab = "Variable", ylab = "Z-score", ylim=c(-3,4))

# Set x-axis tick labels
axis(1, at = seq_along(variable_order), labels = variable_order)